name: Test dbt Models (PR)

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'adrez_dbt/**'
      - 'Dockerfile'
      - 'requirements.txt'
      - 'profiles/**'

jobs:
  test-dbt-models:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image (test only)
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        push: false
        tags: dbt-test:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Test dbt commands in container
      run: |
        # Create temporary profiles for testing
        mkdir -p temp_profiles
        cat > temp_profiles/profiles.yml << EOF
        adrez_poc:
          target: dev
          outputs:
            dev:
              type: sqlserver
              driver: 'ODBC Driver 18 for SQL Server'
              server: ${{ secrets.SQL_SERVER }}
              port: 1433
              database: ${{ secrets.SQL_DATABASE }}
              schema: ${{ secrets.SQL_SCHEMA }}
              user: ${{ secrets.SQL_USER }}
              password: ${{ secrets.SQL_PASSWORD }}
              threads: 4
              trust_cert: true
              encrypt: true
        EOF
        
        # Test dbt commands
        docker run --rm \
          -v $(pwd)/temp_profiles:/app/profiles \
          -e DBT_PASSWORD="${{ secrets.SQL_PASSWORD }}" \
          dbt-test:${{ github.sha }} \
          sh -c "dbt debug && dbt parse && dbt compile"
          
    - name: Cleanup
      run: |
        rm -rf temp_profiles
        
    - name: Comment PR
      uses: actions/github-script@v7
      if: always()
      with:
        script: |
          const status = '${{ job.status }}';
          const message = status === 'success' 
            ? '✅ dbt models tested successfully! Ready for merge.'
            : '❌ dbt model tests failed. Please check the logs.';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: message
          });